<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!--1、让spring自动cn.goods.service下去描述包下的所有类，让所有类中标注的注解生效（简化来说就是service层的配置）-->
    <context:component-scan base-package="cn.goods.service"/>

    <!--2、简化dao层的配置，添加对MapperScanneronfig的配置-->
    <!--好处：1、为cn.goods.dao包中所有的接口创建接口实现类
              2、为接口实现类注入所需要的SqlSessionFactoryBean实例对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.goods.dao"/>
    </bean>

    <!--3、创建SqlSessionFactoryBean实例对象-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--(1)引入数据源对象-->
        <property name="dataSource" ref="dataSource"/>
        <!--(2)引入mybatis配置文件的路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--(3)初始化Mapper映射文件-->
        <property name="mapperLocations">
            <list>
                <value>classpath:cn/goods/dao/*.xml</value>
            </list>
        </property>
    </bean>

    <!--4、创建DataSource数据源对象-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/shopmanagement"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

</beans>